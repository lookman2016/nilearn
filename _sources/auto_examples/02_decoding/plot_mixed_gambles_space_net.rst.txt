.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_02_decoding_plot_mixed_gambles_space_net.py>` to download the full example code or to run this example in your browser via Binder
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_mixed_gambles_space_net.py:


SpaceNet on Jimura et al "mixed gambles" dataset.
==================================================

The segmenting power of SpaceNet is quite visible here.

See also the SpaceNet documentation: :ref:`space_net`.


.. code-block:: default

    # author: DOHMATOB Elvis Dopgima,
    #         GRAMFORT Alexandre



Load the data from the Jimura mixed-gamble experiment
------------------------------------------------------


.. code-block:: default

    from nilearn.datasets import fetch_mixed_gambles
    data = fetch_mixed_gambles(n_subjects=16)

    zmap_filenames = data.zmaps
    behavioral_target = data.gain
    mask_filename = data.mask_img



Fit TV-L1
----------
Here we're using the regressor object given that the task is to predict a
continuous variable, the gain of the gamble.


.. code-block:: default

    from nilearn.decoding import SpaceNetRegressor
    decoder = SpaceNetRegressor(mask=mask_filename, penalty="tv-l1",
                                eps=1e-1,  # prefer large alphas
                                memory="nilearn_cache")

    decoder.fit(zmap_filenames, behavioral_target)

    # Visualize TV-L1 weights
    # ------------------------
    from nilearn.plotting import plot_stat_map, show
    plot_stat_map(decoder.coef_img_, title="tv-l1", display_mode="yz",
                  cut_coords=[20, -2])



Fit Graph-Net
--------------


.. code-block:: default

    decoder = SpaceNetRegressor(mask=mask_filename, penalty="graph-net",
                                eps=1e-1,  # prefer large alphas
                                memory="nilearn_cache")
    decoder.fit(zmap_filenames, behavioral_target)

    # Visualize Graph-Net weights
    # ----------------------------
    plot_stat_map(decoder.coef_img_, title="graph-net", display_mode="yz",
                  cut_coords=[20, -2])

    show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_auto_examples_02_decoding_plot_mixed_gambles_space_net.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: https://mybinder.org/badge_logo.svg
      :target: https://mybinder.org/v2/gh/emdupre/nilearn/gh-pages?filepath=examples/auto_examples/02_decoding/plot_mixed_gambles_space_net.ipynb
      :width: 150 px


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_mixed_gambles_space_net.py <plot_mixed_gambles_space_net.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_mixed_gambles_space_net.ipynb <plot_mixed_gambles_space_net.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
